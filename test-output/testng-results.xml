<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-14T12:29:31 IST" name="Suite" finished-at="2022-10-14T12:31:18 IST" duration-ms="107545">
    <groups>
    </groups>
    <test started-at="2022-10-14T12:29:31 IST" name="Test" finished-at="2022-10-14T12:31:18 IST" duration-ms="107545">
      <class name="testClasses.VerifyUserCanLogin">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c]" started-at="2022-10-14T12:29:31 IST" name="beforeClass" finished-at="2022-10-14T12:30:40 IST" duration-ms="68659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c]" started-at="2022-10-14T12:30:40 IST" name="beforeMethod" finished-at="2022-10-14T12:30:40 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanLogIn()[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c]" started-at="2022-10-14T12:30:40 IST" name="verifyUserCanLogIn" finished-at="2022-10-14T12:30:44 IST" duration-ms="3959" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Profile name is not matching did not expect [Pranali] but found [Pranali]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Profile name is not matching did not expect [Pranali] but found [Pranali]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1417)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2033)
at testClasses.VerifyUserCanLogin.verifyUserCanLogIn(VerifyUserCanLogin.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLogIn -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c]" started-at="2022-10-14T12:30:44 IST" name="afterMethod" finished-at="2022-10-14T12:30:45 IST" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLogIn status=FAILURE method=VerifyUserCanLogin.verifyUserCanLogIn()[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanLogin@28dcca0c]" started-at="2022-10-14T12:30:45 IST" name="afterClass" finished-at="2022-10-14T12:30:46 IST" duration-ms="699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanLogin -->
      <class name="testClasses.verifyUserCanGetLowestPriceProduct">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:46 IST" name="beforeClass" finished-at="2022-10-14T12:30:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:46 IST" name="beforeMethod" finished-at="2022-10-14T12:30:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSearchProduct()[pri:1, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:46 IST" name="verifyUserCanSearchProduct" finished-at="2022-10-14T12:30:52 IST" duration-ms="6430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:52 IST" name="afterMethod" finished-at="2022-10-14T12:30:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSearchProduct status=SUCCESS method=verifyUserCanGetLowestPriceProduct.verifyUserCanSearchProduct()[pri:1, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:52 IST" name="beforeMethod" finished-at="2022-10-14T12:30:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanGetLowestProductOnEachPage()[pri:2, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:30:52 IST" name="verifyUserCanGetLowestProductOnEachPage" finished-at="2022-10-14T12:31:02 IST" duration-ms="9573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanGetLowestProductOnEachPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:31:02 IST" name="afterMethod" finished-at="2022-10-14T12:31:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanGetLowestProductOnEachPage status=SUCCESS method=verifyUserCanGetLowestPriceProduct.verifyUserCanGetLowestProductOnEachPage()[pri:2, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.verifyUserCanGetLowestPriceProduct@66982506]" started-at="2022-10-14T12:31:02 IST" name="afterClass" finished-at="2022-10-14T12:31:02 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.verifyUserCanGetLowestPriceProduct -->
      <class name="testClasses.VerifyUserCanAddNewAddress">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:02 IST" name="beforeClass" finished-at="2022-10-14T12:31:02 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:02 IST" name="beforeMethod" finished-at="2022-10-14T12:31:02 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanOpenProfilePage()[pri:1, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:02 IST" name="verifyUserCanOpenProfilePage" finished-at="2022-10-14T12:31:13 IST" duration-ms="11181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanOpenProfilePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:13 IST" name="afterMethod" finished-at="2022-10-14T12:31:13 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanOpenProfilePage status=SUCCESS method=VerifyUserCanAddNewAddress.verifyUserCanOpenProfilePage()[pri:1, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:13 IST" name="beforeMethod" finished-at="2022-10-14T12:31:13 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:13 IST" name="addNewAddress" data-provider="addressdata" finished-at="2022-10-14T12:31:16 IST" duration-ms="2709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nilesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7845122356]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[431008]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mhasoba mandir]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[shanti van]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:16 IST" name="afterMethod" finished-at="2022-10-14T12:31:16 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewAddress status=SUCCESS method=VerifyUserCanAddNewAddress.addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:16 IST" name="beforeMethod" finished-at="2022-10-14T12:31:16 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:16 IST" name="addNewAddress" data-provider="addressdata" finished-at="2022-10-14T12:31:18 IST" duration-ms="2284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sweety]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7845125657]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[431003]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mhadev colony]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[khushnuma bahvan]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:18 IST" name="afterMethod" finished-at="2022-10-14T12:31:18 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewAddress status=SUCCESS method=VerifyUserCanAddNewAddress.addNewAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testClasses.VerifyUserCanAddNewAddress@70cf32e3]" started-at="2022-10-14T12:31:18 IST" name="afterClass" finished-at="2022-10-14T12:31:18 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testClasses.VerifyUserCanAddNewAddress -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
